// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
@import Foundation;
@import CoreGraphics;
@import WebKit;
@import Dispatch;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIView;

/// Can be <code>UIView</code> or <code>UIBarButtonItem</code>.
SWIFT_PROTOCOL("_TtP12iOSIntentSDK10AnchorView_")
@protocol AnchorView
@property (nonatomic, readonly, strong) UIView * _Nonnull plainView;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK10ApiManager")
@interface ApiManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC12iOSIntentSDK11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIToolbar;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC12iOSIntentSDK18BaseViewController")
@interface BaseViewController : UIViewController
@property (nonatomic, strong) UIToolbar * _Null_unspecified doneToolbar;
- (void)viewDidLoad;
- (void)loaderingWithFlag:(BOOL)flag;
- (void)dismissKeyboard;
- (void)addDoneButtonOnKeyboard;
- (void)showToastWithMessage:(NSString * _Nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;
@class UIImageView;
@class UIButton;
@class DropDown;
@class UIColor;
@class NSURLSessionDataTask;
@class UITextRange;
@class TransactionStatus;
@class UIStoryboardSegue;

SWIFT_CLASS("_TtC12iOSIntentSDK18CardViewController")
@interface CardViewController : BaseViewController <UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified tfCardNumber;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified tfCardName;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified tfCvv;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified iconCardIssuer;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified viewDate;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified ivIconDate;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnMonth;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnDropMonth;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnYear;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnDropYear;
@property (nonatomic, strong) DropDown * _Nonnull mmDropDown;
@property (nonatomic, strong) DropDown * _Nonnull yyyyDropDown;
@property (nonatomic, copy) NSString * _Nonnull month;
@property (nonatomic, copy) NSString * _Nonnull year;
@property (nonatomic) NSInteger limitLength;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnProceed;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnProceedInvisible;
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Nonnull collectorId;
@property (nonatomic, copy) NSString * _Nonnull postData;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, copy) NSString * _Nonnull trupayTransactionId;
@property (nonatomic, strong) UIColor * _Nullable currentButtonBg;
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
@property (nonatomic, strong) NSURLSessionDataTask * _Nullable task;
@property (nonatomic, copy) NSString * _Nonnull previousTextFieldContent;
@property (nonatomic, strong) UITextRange * _Nullable previousSelection;
@property (nonatomic) BOOL isPaymentModeAvail;
- (void)viewDidLoad;
- (void)setNavButton;
- (UIColor * _Nonnull)uicolorFromHexWithRgbValue:(uint32_t)rgbValue SWIFT_WARN_UNUSED_RESULT;
- (void)cancelTxn;
- (void)btnBackWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus status:(NSInteger)status;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
@property (nonatomic, copy) NSString * _Nonnull card;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull cvv;
@property (nonatomic) NSInteger cardLength;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)enableButtonProceedWithIsEnable:(BOOL)isEnable;
- (void)setDateViewAttribWithViewDate:(UIView * _Nonnull)viewDate;
- (void)setFieldAttributesWithTextField:(UITextField * _Nullable)textField imageName:(NSString * _Nullable)imageName;
- (void)getPaymentParamsWithUrl:(NSString * _Nonnull)url postParams:(NSString * _Nonnull)postParams trupayTransactionId:(NSString * _Nonnull)trupayTransactionId;
- (void)setupMMDropDown;
- (void)setupYYYYDropDown;
- (IBAction)btnMonth:(UIButton * _Nonnull)sender;
- (IBAction)btnDropMonth:(UIButton * _Nonnull)sender;
- (IBAction)btnYear:(UIButton * _Nonnull)sender;
- (IBAction)btnDropYear:(UIButton * _Nonnull)sender;
- (IBAction)btnProceed:(id _Nonnull)sender;
- (IBAction)btnProceedInvisible:(id _Nonnull)sender;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK9Constants")
@interface Constants : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;
@class UINib;
@class DropDownCell;

/// A Material Design drop down in replacement for <code>UIPickerView</code>.
SWIFT_CLASS("_TtC12iOSIntentSDK8DropDown")
@interface DropDown : UIView
/// The current visible drop down. There can be only one visible drop down at a time.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) DropDown * _Nullable VisibleDropDown;)
+ (DropDown * _Nullable)VisibleDropDown SWIFT_WARN_UNUSED_RESULT;
+ (void)setVisibleDropDown:(DropDown * _Nullable)value;
/// The view to which the drop down will displayed onto.
@property (nonatomic, weak) id <AnchorView> _Nullable anchorView;
/// The offset point relative to <code>anchorView</code> when the drop down is shown above the anchor view.
/// By default, the drop down is showed onto the <code>anchorView</code> with the top
/// left corner for its origin, so an offset equal to (0, 0).
/// You can change here the default drop down origin.
@property (nonatomic) CGPoint topOffset;
/// The offset point relative to <code>anchorView</code> when the drop down is shown below the anchor view.
/// By default, the drop down is showed onto the <code>anchorView</code> with the top
/// left corner for its origin, so an offset equal to (0, 0).
/// You can change here the default drop down origin.
@property (nonatomic) CGPoint bottomOffset;
@property (nonatomic) CGFloat cellHeight;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
/// The background color of the selected cell in the drop down.
/// Changing the background color automatically reloads the drop down.
@property (nonatomic, strong) UIColor * _Nonnull selectionBackgroundColor;
/// The separator color between cells.
/// Changing the separator color automatically reloads the drop down.
@property (nonatomic, strong) UIColor * _Nonnull separatorColor;
/// The corner radius of DropDown.
/// Changing the corner radius automatically reloads the drop down.
@property (nonatomic) CGFloat cornerRadius;
/// The color of the shadow.
/// Changing the shadow color automatically reloads the drop down.
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
/// The offset of the shadow.
/// Changing the shadow color automatically reloads the drop down.
@property (nonatomic) CGSize shadowOffset;
/// The opacity of the shadow.
/// Changing the shadow opacity automatically reloads the drop down.
@property (nonatomic) float shadowOpacity;
/// The radius of the shadow.
/// Changing the shadow radius automatically reloads the drop down.
@property (nonatomic) CGFloat shadowRadius;
/// The duration of the show/hide animation.
@property (nonatomic) double animationduration;
/// The option of the show animation. Global change.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIViewAnimationOptions animationEntranceOptions;)
+ (UIViewAnimationOptions)animationEntranceOptions SWIFT_WARN_UNUSED_RESULT;
+ (void)setAnimationEntranceOptions:(UIViewAnimationOptions)value;
/// The option of the hide animation. Global change.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIViewAnimationOptions animationExitOptions;)
+ (UIViewAnimationOptions)animationExitOptions SWIFT_WARN_UNUSED_RESULT;
+ (void)setAnimationExitOptions:(UIViewAnimationOptions)value;
/// The option of the show animation. Only change the caller. To change all drop down’s use the static var.
@property (nonatomic) UIViewAnimationOptions animationEntranceOptions;
/// The option of the hide animation. Only change the caller. To change all drop down’s use the static var.
@property (nonatomic) UIViewAnimationOptions animationExitOptions;
/// The downScale transformation of the tableview when the DropDown is appearing
@property (nonatomic) CGAffineTransform downScaleTransform;
/// The color of the text for each cells of the drop down.
/// Changing the text color automatically reloads the drop down.
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// The font of the text for each cells of the drop down.
/// Changing the text font automatically reloads the drop down.
@property (nonatomic, strong) UIFont * _Nonnull textFont;
/// The NIB to use for DropDownCells
/// Changing the cell nib automatically reloads the drop down.
@property (nonatomic, strong) UINib * _Nonnull cellNib;
/// The data source for the drop down.
/// Changing the data source automatically reloads the drop down.
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull dataSource;
/// The localization keys for the data source for the drop down.
/// Changing this value automatically reloads the drop down.
/// This has uses for setting accibility identifiers on the drop down cells (same ones as the localization keys).
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull localizationKeysDataSource;
/// The format for the cells’ text.
/// By default, the cell’s text takes the plain <code>dataSource</code> value.
/// Changing <code>cellConfiguration</code> automatically reloads the drop down.
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable cellConfiguration)(NSInteger, NSString * _Nonnull);
/// A advanced formatter for the cells. Allows customization when custom cells are used
/// Changing <code>customCellConfiguration</code> automatically reloads the drop down.
@property (nonatomic, copy) void (^ _Nullable customCellConfiguration)(NSInteger, NSString * _Nonnull, DropDownCell * _Nonnull);
/// The action to execute when the user selects a cell.
@property (nonatomic, copy) void (^ _Nullable selectionAction)(NSInteger, NSString * _Nonnull);
/// The action to execute when the drop down will show.
@property (nonatomic, copy) void (^ _Nullable willShowAction)(void);
/// The action to execute when the user cancels/hides the drop down.
@property (nonatomic, copy) void (^ _Nullable cancelAction)(void);
/// Creates a new instance of a drop down.
/// Don’t forget to setup the <code>dataSource</code>,
/// the <code>anchorView</code> and the <code>selectionAction</code>
/// at least before calling <code>show()</code>.
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK))
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@end


@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK))
@end


@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK))
/// Starts listening to keyboard events.
/// Allows the drop down to display correctly when keyboard is showed.
+ (void)startListeningToKeyboard;
@end

@class UITableView;
@class UITableViewCell;

@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class NSDictionary;

@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK))
/// An Objective-C alias for the show() method which converts the returned tuple into an NSDictionary.
///
/// returns:
/// An NSDictionary with a value for the “canBeDisplayed” Bool, and possibly for the “offScreenHeight” Optional(CGFloat).
- (NSDictionary * _Nonnull)show SWIFT_WARN_UNUSED_RESULT;
/// Hides the drop down.
- (void)hide;
@end


@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK))
- (void)updateConstraints;
- (void)layoutSubviews;
@end


@interface DropDown (SWIFT_EXTENSION(iOSIntentSDK))
/// Reloads all the cells.
/// It should not be necessary in most cases because each change to
/// <code>dataSource</code>, <code>textColor</code>, <code>textFont</code>, <code>selectionBackgroundColor</code>
/// and <code>cellConfiguration</code> implicitly calls <code>reloadAllComponents()</code>.
- (void)reloadAllComponents;
/// Returns the selected item.
@property (nonatomic, readonly, copy) NSString * _Nullable selectedItem;
@end

@class UILabel;

SWIFT_CLASS("_TtC12iOSIntentSDK12DropDownCell")
@interface DropDownCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified optionLabel;
@property (nonatomic, strong) UIColor * _Nullable selectedBackgroundColor;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface DropDownCell (SWIFT_EXTENSION(iOSIntentSDK))
- (void)awakeFromNib;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK21InitialViewController")
@interface InitialViewController : BaseViewController
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Nonnull accessToken;
@property (nonatomic, copy) NSString * _Nonnull collectorId;
@property (nonatomic, copy) NSString * _Nonnull customerMobNum;
@property (nonatomic, copy) NSString * _Nonnull customerEmail;
@property (nonatomic, copy) NSString * _Nonnull requestId;
@property (nonatomic, copy) NSString * _Nonnull paymentMode;
@property (nonatomic, copy) NSString * _Nonnull merchantAppName;
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
@property (nonatomic) BOOL isStatusClicked;
@property (nonatomic, copy) NSString * _Nonnull trupayTxnId;
@property (nonatomic, copy) NSString * _Nonnull orderId;
- (void)viewDidLoad;
- (void)getTransactionStatusWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus;
- (void)finishWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK19NavigatorController")
@interface NavigatorController : UINavigationController
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Nonnull collectorId;
@property (nonatomic, copy) NSString * _Nonnull accessToken;
@property (nonatomic, copy) NSString * _Nonnull customerMobNum;
@property (nonatomic, copy) NSString * _Nonnull customerEmail;
@property (nonatomic, copy) NSString * _Nonnull merchantAppName;
@property (nonatomic, copy) NSString * _Nonnull requestId;
@property (nonatomic, copy) NSString * _Nonnull paymentMode;
@property (nonatomic, copy) NSString * _Nonnull trupayTxnId;
@property (nonatomic, copy) NSString * _Nonnull orderId;
@property (nonatomic) BOOL isStatusClicked;
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
- (void)viewDidLoad;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK24NetBankingViewController")
@interface NetBankingViewController : BaseViewController <UIPickerViewDelegate, UITextFieldDelegate>
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnProceedInvisible;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnProceed1;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnSelectBank;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnDropDownList;
@property (nonatomic, strong) DropDown * _Nonnull amountDropDown;
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Null_unspecified collectorId;
@property (nonatomic, copy) NSString * _Nonnull postData;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, copy) NSString * _Nonnull trupayTransactionId;
@property (nonatomic, strong) UIColor * _Nullable currentButtonBg;
@property (nonatomic, strong) NSURLSessionDataTask * _Nullable task;
@property (nonatomic) BOOL isPaymentModeAvail;
- (void)viewDidLoad;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)setNavButton;
- (UIColor * _Nonnull)uicolorFromHexWithRgbValue:(uint32_t)rgbValue SWIFT_WARN_UNUSED_RESULT;
- (void)cancelTxn;
- (void)btnBackWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus status:(NSInteger)status;
- (void)setupAmountDropDownWithList:(NSArray<NSString *> * _Nonnull)list;
- (void)getPaymentParamsWithUrl:(NSString * _Nonnull)url postParams:(NSString * _Nonnull)postParams trupayTransactionId:(NSString * _Nonnull)trupayTransactionId;
- (IBAction)btnSelectBank:(UIButton * _Nonnull)sender;
- (IBAction)btnDropDownBank:(id _Nonnull)sender;
- (IBAction)btnProceed1:(id _Nonnull)sender;
- (IBAction)btnProceedInvisible:(id _Nonnull)sender;
- (IBAction)btnSbiBank:(UIButton * _Nonnull)sender;
- (IBAction)btnAxixBank:(UIButton * _Nonnull)sender;
- (IBAction)btnHdfcBank:(UIButton * _Nonnull)sender;
- (IBAction)btnYesBank:(UIButton * _Nonnull)sender;
- (IBAction)btnPnbBank:(UIButton * _Nonnull)sender;
- (IBAction)btnIciciBank:(UIButton * _Nonnull)sender;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK15PaymentOptionVC")
@interface PaymentOptionVC : BaseViewController
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lbAmount;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lbOrderId;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lbTitleAppName;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified UPILabel;
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Nonnull accessToken;
@property (nonatomic, copy) NSString * _Nonnull collectorId;
@property (nonatomic, copy) NSString * _Nonnull customerMobNum;
@property (nonatomic, copy) NSString * _Nonnull customerEmail;
@property (nonatomic, copy) NSString * _Nonnull requestId;
@property (nonatomic, copy) NSString * _Nonnull paymentMode;
@property (nonatomic, copy) NSString * _Nonnull merchantAppName;
@property (nonatomic, readonly, copy) NSLocale * _Nonnull locale;
@property (nonatomic, copy) NSString * _Nonnull symbol;
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
- (void)viewDidLoad;
- (IBAction)cancelButton:(UIButton * _Nonnull)sender;
- (void)checkParamsWithAmount:(NSString * _Nullable)amount merchantTransactionRefNumber:(NSString * _Nullable)merchantTransactionRefNumber accessToken:(NSString * _Nullable)accessToken collectorId:(NSString * _Nullable)collectorId customerMobNum:(NSString * _Nullable)customerMobNum customerEmail:(NSString * _Nullable)customerEmail;
- (void)back;
- (void)btnBackWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus status:(NSInteger)status;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK27PaymentOptionViewController")
@interface PaymentOptionViewController : BaseViewController
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lbAmount;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lbOrderId;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified lbTitleAppName;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified vCircle;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified firstLetterInCircle;
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Nonnull merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Nonnull accessToken;
@property (nonatomic, copy) NSString * _Nonnull collectorId;
@property (nonatomic, copy) NSString * _Nonnull customerMobNum;
@property (nonatomic, copy) NSString * _Nonnull customerEmail;
@property (nonatomic, copy) NSString * _Nonnull merchantAppName;
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
- (void)viewDidLoad;
- (void)checkParamsWithAmount:(NSString * _Nullable)amount merchantTransactionRefNumber:(NSString * _Nullable)merchantTransactionRefNumber accessToken:(NSString * _Nullable)accessToken collectorId:(NSString * _Nullable)collectorId customerMobNum:(NSString * _Nullable)customerMobNum customerEmail:(NSString * _Nullable)customerEmail;
- (void)back;
- (void)btnBackWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus status:(NSInteger)status;
- (void)viewWillAppear:(BOOL)animated;
- (void)drawCircle;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWebView;
@class NSTimer;
@class WKUserContentController;
@class WKScriptMessage;

SWIFT_CLASS("_TtC12iOSIntentSDK21PaymentViewController")
@interface PaymentViewController : BaseViewController <WKScriptMessageHandler, UIWebViewDelegate>
@property (nonatomic, strong) UIView * _Nullable overlay;
@property (nonatomic, weak) IBOutlet UIWebView * _Null_unspecified webView;
@property (nonatomic, copy) NSString * _Nonnull postData;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, copy) NSString * _Nonnull trupayTransactionId;
@property (nonatomic, copy) NSString * _Nonnull scheme;
@property (nonatomic) BOOL isBackPressed;
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)waitForStatusWithTimer:(NSTimer * _Nonnull)timer;
- (void)viewWillDisappear:(BOOL)animated;
- (void)getTransactionStatusWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus;
- (void)finishWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus;
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (void)loadingWithFlag:(BOOL)flag;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK19PopUpViewController")
@interface PopUpViewController : UIViewController
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified popUpText;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSArray;

SWIFT_CLASS("_TtC12iOSIntentSDK17TransactionStatus")
@interface TransactionStatus : NSObject
@property (nonatomic, copy) NSString * _Nullable success;
@property (nonatomic, copy) NSString * _Nullable responseCode;
@property (nonatomic, copy) NSString * _Nullable secureHash;
@property (nonatomic, copy) NSString * _Nullable responseMessage;
@property (nonatomic, copy) NSString * _Nullable csrfToken;
/// Returns an array of models based on given dictionary.
/// Sample usage:
/// let TransactionStatus_list = TransactionStatus.modelsFromDictionaryArray(someDictionaryArrayFromJSON)
/// \param array NSArray from JSON dictionary.
///
///
/// returns:
/// Array of TransactionStatus Instances.
+ (NSArray<TransactionStatus *> * _Nonnull)modelsFromDictionaryArrayWithArray:(NSArray * _Nonnull)array SWIFT_WARN_UNUSED_RESULT;
/// Constructs the object based on the given dictionary.
/// Sample usage:
/// let TransactionStatus = TransactionStatus(someDictionaryFromJSON)
/// \param dictionary NSDictionary from JSON.
///
///
/// returns:
/// TransactionStatus Instance.
- (nullable instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
/// Returns the dictionary representation for the current instance.
///
/// returns:
/// NSDictionary.
- (NSDictionary * _Nonnull)dictionaryRepresentation SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(iOSIntentSDK)) <AnchorView>
@property (nonatomic, readonly, strong) UIView * _Nonnull plainView;
@end


@interface UIView (SWIFT_EXTENSION(iOSIntentSDK))
- (void)addConstraintsWithFormat:(NSString * _Nonnull)format options:(NSLayoutFormatOptions)options metrics:(NSDictionary<NSString *, id> * _Nullable)metrics views:(NSDictionary<NSString *, UIView *> * _Nonnull)views;
- (void)addUniversalConstraintsWithFormat:(NSString * _Nonnull)format options:(NSLayoutFormatOptions)options metrics:(NSDictionary<NSString *, id> * _Nullable)metrics views:(NSDictionary<NSString *, UIView *> * _Nonnull)views;
@end


@interface UIView (SWIFT_EXTENSION(iOSIntentSDK))
@end


@interface UIView (SWIFT_EXTENSION(iOSIntentSDK)) <AnchorView>
@property (nonatomic, readonly, strong) UIView * _Nonnull plainView;
@end


@interface UIWindow (SWIFT_EXTENSION(iOSIntentSDK))
+ (UIWindow * _Nullable)visibleWindow SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12iOSIntentSDK17UPIViewController")
@interface UPIViewController : BaseViewController <UITextFieldDelegate>
@property (nonatomic, strong) UIViewController * _Null_unspecified merchantVC;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified tfUpiId;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnProceed;
@property (nonatomic, copy) NSString * _Nonnull amount;
@property (nonatomic, copy) NSString * _Null_unspecified merchantTransactionRefNumber;
@property (nonatomic, copy) NSString * _Null_unspecified collectorId;
@property (nonatomic, copy) NSString * _Nonnull postData;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, copy) NSString * _Null_unspecified trupayTransactionId;
@property (nonatomic, copy) NSString * _Null_unspecified trupayRefNumber;
@property (nonatomic, strong) UIColor * _Nullable currentButtonBg;
@property (nonatomic, copy) NSString * _Null_unspecified virtualAddress;
@property (nonatomic) BOOL isBackPressed;
@property (nonatomic, strong) NSURLSessionDataTask * _Null_unspecified task;
@property (nonatomic, strong) dispatch_queue_t _Nullable mDispatchQuquq;
@property (nonatomic, strong) dispatch_queue_t _Nullable mDispatchQuquqCallback3;
@property (nonatomic) BOOL isPaymentModeAvail;
- (void)viewDidLoad;
- (void)setNavButton;
- (UIColor * _Nonnull)uicolorFromHexWithRgbValue:(uint32_t)rgbValue SWIFT_WARN_UNUSED_RESULT;
- (void)cancelTxn;
- (void)btnBackWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus status:(NSInteger)status;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)getTransactionStatusWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)finishWithTrnasactionStatus:(TransactionStatus * _Nullable)trnasactionStatus;
- (void)upiCallback1WithTrupayTransactionId:(NSString * _Null_unspecified)trupayTransactionId transactionRefNum:(NSString * _Null_unspecified)transactionRefNum;
- (IBAction)btnProceed:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIActivityIndicatorView;
@class UIPickerView;

SWIFT_CLASS("_TtC12iOSIntentSDK14ViewController")
@interface ViewController : UIViewController <UIPickerViewDelegate, UIPickerViewDataSource, UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UIActivityIndicatorView * _Null_unspecified loader;
@property (nonatomic, weak) IBOutlet UIPickerView * _Null_unspecified pickerBankList;
- (void)viewDidLoad;
- (void)loaderingWithFlag:(BOOL)flag;
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
- (IBAction)btnProceed:(UIButton * _Nonnull)sender;
- (IBAction)btnYesBaank:(UIButton * _Nonnull)sender;
- (IBAction)btnIciciBank:(UIButton * _Nonnull)sender;
- (IBAction)btnPnbBank:(id _Nonnull)sender;
- (IBAction)btnAndhraBank:(UIButton * _Nonnull)sender;
- (IBAction)btnAxisbank:(UIButton * _Nonnull)sender;
- (IBAction)btnKotakBank:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
